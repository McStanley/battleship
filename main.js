(()=>{"use strict";class t{ship=null;#t=!1;get wasAttacked(){return this.#t}attack(){this.#t=!0}}class e{#e=Array(10).fill().map((()=>Array(10).fill().map((()=>new t))));get board(){return this.#e}placeShip(t,r,a){const n=e.calculatePlacement(t,r,a);for(let e=0;e<n.length;e+=1){const r=n[e],a=r[0],o=r[1];this.#e[a][o].ship=t}}canPlace(t,r,a){const n=e.calculatePlacement(t,r,a);for(let t=0;t<n.length;t+=1){const e=n[t],r=e[0],a=e[1];if(r<0||r>9)return!1;if(a<0||a>9)return!1;if(this.#e[r][a].ship)return!1;const o=[[-1,1],[0,1],[1,1],[1,0],[1,-1],[0,-1],[-1,-1],[-1,0]];for(let t=0;t<o.length;t+=1){const e=o[t],[n,s]=[e[0],e[1]];if(this.#e[r+n]?.[a+s]?.ship)return!1}}return!0}static calculatePlacement(t,e,r){const a=[];for(let n=0;n<t.length;n+=1){const t=e[0]+("horizontal"===r?n:0),o=e[1]+("vertical"===r?n:0);a.push([t,o])}return a}receiveAttack(t,e){this.#e[t][e].attack(),this.#e[t][e].ship&&this.#e[t][e].ship.hit()}get allSunk(){for(let t=0;t<this.#e.length;t+=1){const e=this.#e[t];for(let t=0;t<e.length;t+=1){const r=e[t];if(r.ship&&!r.wasAttacked)return!1}}return!0}}class r{#r;#a;#n=new e;constructor(t,e){this.#r=t,this.#a=e}get name(){return this.#r}get isHuman(){return this.#a}get gameboard(){return this.#n}static attack(t,e){const[r,a]=[e[0],e[1]];t.gameboard.receiveAttack(r,a)}}class a{#o;#s=0;constructor(t){this.#o=t}get length(){return this.#o}get hits(){return this.#s}hit(){this.#s+=1}isSunk(){return this.#s===this.#o}}const n=(t,e)=>{let r,a,n;do{r=Math.floor(10*Math.random()),a=Math.floor(10*Math.random()),n=Math.random()<.5?"horizontal":"vertical"}while(!t.gameboard.canPlace(e,[r,a],n));return{location:[r,a],direction:n}},o=(t,e)=>{const{x:r,y:a}=t.dataset;return e.gameboard.board[r][a]},s=(()=>{let t,e;const o=()=>e,s=t=>{const e=[new a(5),new a(4),new a(3),new a(3),new a(2)];for(;e.length;){const r=e.shift(),a=n(t,r);t.gameboard.placeShip(r,a.location,a.direction)}};return{getActive:()=>t,getPassive:o,isOver:()=>!!e.gameboard.allSunk,togglePlayers:()=>{[t,e]=[e,t]},computerMove:()=>{const t=o();let e,r;do{e=Math.floor(10*Math.random()),r=Math.floor(10*Math.random())}while(t.gameboard.board[e][r].wasAttacked);t.gameboard.receiveAttack(e,r)},init:()=>{t=new r("Player 1",!0),e=new r("Player 2",!1),s(t),s(e)}}})();(()=>{const t=t=>{t.replaceChildren();for(let e=0;e<10;e+=1)for(let r=0;r<10;r+=1){const a=document.createElement("div");a.classList.add("grid-cell"),a.dataset.x=r,a.dataset.y=e,t.appendChild(a)}},e=(t,e)=>{const r=e.querySelectorAll(".grid-cell");for(let e=0;e<r.length;e+=1){const a=r[e],n=o(a,t);n.wasAttacked&&(n.ship||(a.style.backgroundColor="blue"),n.ship&&(a.style.backgroundColor=n.ship.isSunk()?"purple":"red"))}},r=()=>{const r=document.querySelector("#left-grid");t(r);const a=document.querySelectorAll("#left-grid > .grid-cell"),n=s.getActive();for(let t=0;t<a.length;t+=1){const e=a[t];o(e,n).ship&&(e.style.backgroundColor="grey")}e(n,r)},a=()=>{const n=document.querySelector("#right-grid");t(n),n.style.pointerEvents="auto";const l=s.getPassive();e(l,n);const i=n.querySelectorAll(".grid-cell");for(let t=0;t<i.length;t+=1){const c=i[t];o(c,l).wasAttacked||c.addEventListener("click",(()=>{document.querySelector("#right-grid").style.pointerEvents="none",l.gameboard.receiveAttack(c.dataset.x,c.dataset.y),e(l,n),s.isOver()?alert(`${s.getActive().name} won`):(s.togglePlayers(),setTimeout((()=>{if(!s.getActive().isHuman){if(s.computerMove(),s.isOver())return alert(`${s.getActive().name} won`),s.togglePlayers(),void r();s.togglePlayers()}r(),a()}),250))}))}};return{init:()=>{s.init(),r(),a()}}})().init()})();